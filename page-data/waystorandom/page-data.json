{"componentChunkName":"component---src-templates-blog-post-js","path":"/waystorandom/","result":{"data":{"site":{"siteMetadata":{"title":"Mindscape"}},"markdownRemark":{"id":"dbbd5e77-b15f-5b87-9fd9-c3bee827ed6d","excerpt":"最近在做网页版扫雷小游戏，遇到一个要求是，从一个大小为n的雷区中随机选取k…","html":"<p>最近在做网页版扫雷小游戏，遇到一个要求是，从一个大小为n的雷区中随机选取k个不重复的方块，用来放置地雷。看似是一个很简单的问题，但是我在写的时候发现有不少思路不同的实现，决定记一下最好的方法，以便日后查看。</p>\n<p>先贴上我最终的代码：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">/**\n * 大致思路：乱序排列一个数组，并取前k个作为地雷\n * todo: make this for-free\n */</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">generateMines</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 所有地雷位置（用数字表示）</span>\n    <span class=\"token keyword\">let</span> mines <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 初始化一个1到n的数组</span>\n    <span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> lop <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> lop <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gameboard<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> lop<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        arr<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>lop<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// 随机打乱数组元素的顺序</span>\n    <span class=\"token function\">shuffle</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// 将乱序数组的前k个元素当作地雷的位置，放入集合</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> lop <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> lop <span class=\"token operator\">&lt;</span> numberMines<span class=\"token punctuation\">;</span> lop<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        mines<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>lop<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<hr>\n<p>接下来讲下其他几种做法。</p>\n<h2>不要这么写</h2>\n<p>最开始我的思路是这样的：（伪代码）</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>setMines<span class=\"token punctuation\">.</span>length <span class=\"token operator\">!=</span> numMines<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> mine <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>setMines<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span>mine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">continue</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    setMines<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>mine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>大致意思是，不停的随机，直到集合中放满了k个地雷。这样做的缺点显而易见：运行时间不固定，很可能一直随机到已有的元素，导致循环迟迟不能结束。特别是当地雷数量k接近雷区n的时候，每次随机大概率会随机到已经是地雷的数字，造成“死循环”。</p>\n<h2>比上面那个好点</h2>\n<p>为了解决上一个死循环的问题，我又想了新的方法：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">generateMinesTheDullWay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> setMines <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>setMines<span class=\"token punctuation\">;</span>\n\n     <span class=\"token comment\">// 循环次数固定</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> lop <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> lop <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>numMines<span class=\"token punctuation\">;</span> lop<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// generate a random number range in [0, length)</span>\n        <span class=\"token keyword\">let</span> mine <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gameboard<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>setMines<span class=\"token punctuation\">.</span><span class=\"token function\">has</span><span class=\"token punctuation\">(</span>mine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token comment\">// 如果重复了，就顺移到下一个位置</span>\n            mine <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>mine <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>gameboard<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        setMines<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>mine<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>这个方法的运行时间稳定，且随机效果也不错，拿去用足够了。但是这么做还不够抽象，我们可以把该类问题用如下方法解决。</p>\n<h2>抽象做法</h2>\n<p>对于从n个元素里随机取k个的问题，可以将n个元素各自放入一个集合，然后随机取k次，每取一个元素，就将其从集合中去除，这样便不会重复。</p>\n<blockquote>\n<p>Credit: <a href=\"http://www.cnblogs.com/kirai/\">栋神</a></p>\n</blockquote>","frontmatter":{"title":"随机在数组中取k项的几种做法","date":"July 01, 2018","category":"code"}}},"pageContext":{"slug":"/waystorandom/"}}}