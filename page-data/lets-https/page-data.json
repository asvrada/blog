{"componentChunkName":"component---src-templates-blog-post-js","path":"/lets-https/","result":{"data":{"site":{"siteMetadata":{"title":"Mindscape"}},"markdownRemark":{"id":"bc0254c4-4e57-5394-99f5-cb3346bffac0","excerpt":"闲来无事，我又双叒叕创了个服务器。这次我决定走的远一点，给他上个SSL玩玩，毕竟纯HTTP的请求已经开始被时代所抛弃。 我这服务器使用了以下配置： Ubuntu 18.04 LTS nginx （apt install的） Google Domain: kksk.biz 获取证书 我使用的免费的 Let’s…","html":"<p>闲来无事，我又双叒叕创了个服务器。这次我决定走的远一点，给他上个SSL玩玩，毕竟纯HTTP的请求已经开始被时代所抛弃。</p>\n<p>我这服务器使用了以下配置：</p>\n<ol>\n<li>Ubuntu 18.04 LTS</li>\n<li>nginx （apt install的）</li>\n<li>Google Domain: <a href=\"http://kksk.biz\">kksk.biz</a></li>\n</ol>\n<h1>获取证书</h1>\n<p>我使用的免费的 <a href=\"https://letsencrypt.org\">Let’s Encrypt</a>。<br>\n具体流程根据其网站的说明进行，完成后你的服务器上应该就有这么几个文件了：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">xxx@xxx:/etc/letsencrypt/live/<span class=\"token punctuation\">[</span>you.website.com<span class=\"token punctuation\">]</span><span class=\"token comment\"># l</span>\ncert.pem@  chain.pem@  fullchain.pem@  privkey.pem@  README</code></pre></div>\n<h1>安装证书</h1>\n<p>我使用的服务器是nginx，因此找到nginx站点的配置文件（位于<code class=\"language-text\">/etc/nginx/sites-available</code>）</p>\n<p>编辑实例如下：  </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">server <span class=\"token punctuation\">{</span>\n\tlisten <span class=\"token number\">80</span> default_server<span class=\"token punctuation\">;</span>\n\tlisten <span class=\"token punctuation\">[</span>::<span class=\"token punctuation\">]</span>:80 default_server<span class=\"token punctuation\">;</span>\n\t<span class=\"token builtin class-name\">return</span> <span class=\"token number\">301</span> https://<span class=\"token variable\">$host</span><span class=\"token variable\">$request_uri</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nserver <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\"># SSL configuration</span>\n\t<span class=\"token comment\">#</span>\n\tlisten <span class=\"token number\">443</span> ssl default_server<span class=\"token punctuation\">;</span>\n\tlisten <span class=\"token punctuation\">[</span>::<span class=\"token punctuation\">]</span>:443 ssl default_server<span class=\"token punctuation\">;</span>\n\n\tssl_certificate /etc/letsencrypt/live/kksk.biz/fullchain.pem<span class=\"token punctuation\">;</span>\n\tssl_certificate_key /etc/letsencrypt/live/kksk.biz/privkey.pem<span class=\"token punctuation\">;</span>\n\n\tssl_protocols       TLSv1 TLSv1.1 TLSv1.2<span class=\"token punctuation\">;</span>\n\tssl_ciphers         HIGH:<span class=\"token operator\">!</span>aNULL:<span class=\"token operator\">!</span>MD5<span class=\"token punctuation\">;</span></code></pre></div>\n<p>第一个server block用于将http的请求全部转为https。</p>\n<p>重启后服务器打开浏览器验证，kksk！</p>\n<p><img src=\"https://i.imgur.com/PdEPcQI.png\" alt=\"https\"></p>\n<hr>\n<p>nginx的ssl配置有挺多门道的，要用于正式环境的话这么简单的配置估计是不够的，延伸阅读如下：</p>\n<ol>\n<li><a href=\"https://medium.com/@utkarsh_verma/how-to-obtain-a-wildcard-ssl-certificate-from-lets-encrypt-and-setup-nginx-to-use-wildcard-cfb050c8b33f\">Wildcard SSL cert</a></li>\n<li><a href=\"https://bjornjohansen.no/optimizing-https-nginx\">optimizing https nginx</a></li>\n<li><a href=\"https://bjornjohansen.no/redirect-to-https-with-nginx\">Redict http to https</a></li>\n<li><a href=\"http://nginx.org/en/docs/http/configuring_https_servers.html\">Conf https servers</a></li>\n</ol>","frontmatter":{"title":"搭建HTTPS记录","date":"November 16, 2018","category":"note"}}},"pageContext":{"slug":"/lets-https/"}}}