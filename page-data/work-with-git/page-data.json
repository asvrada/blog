{"componentChunkName":"component---src-templates-blog-post-js","path":"/work-with-git/","result":{"data":{"site":{"siteMetadata":{"title":"Mindscape"}},"markdownRemark":{"id":"d2ad6df2-4fc3-5138-8fcd-2757359164eb","excerpt":"推荐 git 互动式教程：learn git branching 公司使用常用的git来管理代码，自然是有不少在工作中应用git的机会。在此总结一下常见的操作流程。 取得源代码，创建feature的branch 进行开发，提交变更 这一步有时会遇到很多情况。最常见的就是添加变更并commit…","html":"<blockquote>\n<p>推荐 git 互动式教程：<a href=\"https://learngitbranching.js.org\">learn git branching</a></p>\n</blockquote>\n<p>公司使用常用的git来管理代码，自然是有不少在工作中应用git的机会。在此总结一下常见的操作流程。</p>\n<h2>取得源代码，创建feature的branch</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git clone xxx\ngit checkout -b {name}</code></pre></div>\n<h2>进行开发，提交变更</h2>\n<p>这一步有时会遇到很多情况。最常见的就是添加变更并commit: </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git add xxx\ngit commit</code></pre></div>\n<p>我一般不传入评论 <code class=\"language-text\">-m</code> 而直接运行 <code class=\"language-text\">git commit</code>，这样可以打开文本编辑器输入详细变更。毕竟是公司的代码库，得把做了什么都写清楚。</p>\n<p>其他时间，我都花在寻找如何补救误操作了。</p>\n<ol>\n<li>还未stage，取消更改：<code class=\"language-text\">git checkout -- file</code></li>\n<li>更改上个commit：<code class=\"language-text\">git commit --amend</code></li>\n<li>在错误的branch上开发：<code class=\"language-text\">git stash; git stash pop</code></li>\n</ol>\n<blockquote>\n<p>虽然不知道为什么，但是最好不要修改已push到服务器的commit。</p>\n</blockquote>\n<h2>提交更改</h2>\n<p>首先需要为local branch设置一个对应的服务器上的branch：\n<code class=\"language-text\">git push --set-upstream origin {local branch}</code>\n然后<code class=\"language-text\">git push</code>来推送任何commit。</p>\n<p>如果需要在不同的branch间同步commit，可以使用rebase或者merge。</p>\n<h3>rebase</h3>\n<p>一般用来把自己的branch rebase到最新的master上。</p>\n<p><code class=\"language-text\">git rebase {other}</code> 用于把当前 branch 所做的 commit 移到 other 这个 branch 上。说是移动，其实是replay提交记录，重新应用变动，因此其实是不同的commit，hash是不一样的。</p>\n<h3>merge</h3>\n<p><code class=\"language-text\">git merge {other}</code> 用于把 other 这个 branch 上的新 commit 同步到当前 branch 上。</p>\n<h2>pull request</h2>\n<p>有conflict就修改。</p>\n<h2>完成开发，删除branch</h2>\n<p>确认pull request已接受，branch 合并到 master，该分支所做变更已经彻底提交后，可以先删除remote branch:\n<code class=\"language-text\">git push origin --delete {branch}</code></p>\n<p>再删除本地分支: <code class=\"language-text\">git branch -D {branch}</code></p>","frontmatter":{"title":"工作中使用git的一点心得","date":"July 24, 2019","category":"note"}}},"pageContext":{"slug":"/work-with-git/"}}}